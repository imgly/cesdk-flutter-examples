//highlight-kotlin-block
pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.6.1" apply false
    id "com.android.library" version "8.6.1" apply false
    //highlight-kotlin
    id 'org.jetbrains.kotlin.android' version "1.9.10" apply false
    //highlight-kotlin
    id 'com.github.gmazzo.buildconfig' version "5.3.5" apply false
}

// highlight-kotlin-compiler
gradle.ext.kotlinCompilerExtensionVersion = "1.5.3"
// highlight-kotlin-compiler

rootProject.name = "CE.SDK Flutter Android Examples"
include ":app"
//highlight-kotlin-block

// Internal use only
def ubqRootPath = "../../../../"
def useLocalEditor = System.getenv("UBQ_USE_LOCAL_EDITOR") == "true" || getLocalProperty("useLocalEditor") == "true"

String getLocalProperty(String key) {
    def propertiesFile = new File(rootDir, "local.properties")
    if (!propertiesFile.exists()) return false
    def properties = new Properties()
    properties.load(propertiesFile.newDataInputStream())
    return properties.getProperty(key)
}

if (useLocalEditor) {
    includeBuild("$ubqRootPath/apps/cesdk_android") {
        name "editor"
        dependencySubstitution {
            substitute module('ly.img:editor') using project(':editor')
        }
    }
}
// Internal use only
